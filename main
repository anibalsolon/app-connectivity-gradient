#!/bin/bash
#PBS -l nodes=1:ppn=16
#PBS -l vmem=32gb
#PBS -l walltime=00:30:00

set -xe

# Temp singularity cleanup
#rm -Rf ~/.local/share/containers/cache
#singularity cache clean -f

LH_GII=$(jq -r '.left' config.json)
RH_GII=$(jq -r '.right' config.json)

APPROACH=$(jq -r '.approach // "diffusion-maps"' config.json)
KERNEL=$(jq -r '.kernel // "normalized-angle"' config.json)
COMPONENTS=$(jq -r '.n_components // 3' config.json)
RANDOM_STATE=$(jq -r '.random_state // 0' config.json)

CONFOUNDS=$(jq -r '.confounds // ""' config.json)
THRESHOLD=$(jq -r '.threshold // 0.' config.json)

SPACE=$(jq -r '._inputs[] | select(.datatype_tags[] | contains("func")) | .meta.space // "hcp"' config.json)

HCP_DOUBLECHECK=$(jq -r '._inputs[] | select(.tags[] | (contains("fsaverage_32k") or contains("32k")))' config.json)
if [ ! -z "$HCP_DOUBLECHECK" ]
then
    SPACE="hcp"
fi

mkdir -p gradients

OPTS=""
if [ -s "$CONFOUNDS" ]; then
    OPTS="$OPTS --confounds $CONFOUNDS"
fi
OPTS="$OPTS --threshold $THRESHOLD"

time singularity run -e docker://anibalsolon/app-connectivity-gradient:v0.0.1 \
    python main.py \
        --space $SPACE \
        --n_components $COMPONENTS \
        $OPTS \
        --random_state $RANDOM_STATE \
        $APPROACH $KERNEL $LH_GII $RH_GII
